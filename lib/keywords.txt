#FUNCTIONS COLOR 			#D35400 - ORANGE			KEYWORD1
#FUNCTIONS COLOR			#D35400 - ORANGE			KEYWORD2
#STRUCTURE COLORS 			#5E6D03 - GREEN			KEYWORD3
#VARIABLES COLOR 				#00979C - BLUE				LITERAL2

# LITERAL2 specifies constants

HIGH	LITERAL2	Constants
LOW	LITERAL2	Constants
INPUT	LITERAL2	Constants
INPUT_PULLUP	LITERAL2	Constants
OUTPUT	LITERAL2	Constants
DEC	LITERAL2	Serial_Print
BIN	LITERAL2	Serial_Print
HEX	LITERAL2	Serial_Print
OCT	LITERAL2	Serial_Print
PI	LITERAL2
HALF_PI	LITERAL2
TWO_PI	LITERAL2
LSBFIRST	LITERAL2	ShiftOut
MSBFIRST	LITERAL2	ShiftOut
CHANGE	LITERAL2	AttachInterrupt
FALLING	LITERAL2	AttachInterrupt
RISING	LITERAL2	AttachInterrupt
DEFAULT	LITERAL2	AnalogReference
EXTERNAL	LITERAL2	AnalogReference
INTERNAL	LITERAL2	AnalogReference
INTERNAL1V1	LITERAL2	AnalogReference
INTERNAL2V56	LITERAL2	AnalogReference

boolean	LITERAL2	BooleanVariables
byte	LITERAL2	Byte
const	LITERAL2	Const
false	LITERAL2	Constants
float	LITERAL2	Float
null	LITERAL2	
int	LITERAL2	Int
long	LITERAL2	Long
new	LITERAL2	
private	LITERAL2
protected	LITERAL2	
public	LITERAL2	
short	LITERAL2
signed	LITERAL2
static	LITERAL2	Static
String	LITERAL2	String
void	LITERAL2	Void
true	LITERAL2	
unsigned	LITERAL2

boolean	LITERAL2	boolean_
byte	LITERAL2	byte_
char	LITERAL2	char_
float	LITERAL2	float_
int	LITERAL2	int_
long	LITERAL2	long_
word	LITERAL2	word_

# KEYWORD2 specifies methods and functions

abs	KEYWORD2	Abs
acos	KEYWORD2	ACos
asin	KEYWORD2	ASin
atan	KEYWORD2	ATan
atan2	KEYWORD2	ATan2
ceil	KEYWORD2	Ceil
constrain	KEYWORD2	Constrain
cos	KEYWORD2	Cos
degrees	KEYWORD2
exp	KEYWORD2	Exp
floor	KEYWORD2	Floor
log	KEYWORD2	Log
map	KEYWORD2	Map
max	KEYWORD2	Max
min	KEYWORD2	Min
radians	KEYWORD2
random	KEYWORD2	Random
randomSeed	KEYWORD2	RandomSeed
round	KEYWORD2
sin	KEYWORD2	Sin
sq	KEYWORD2	Sq
sqrt	KEYWORD2	Sqrt
tan	KEYWORD2	Tan
pow	KEYWORD2	Pow

bitRead	KEYWORD2	BitRead
bitWrite	KEYWORD2	BitWrite
bitSet	KEYWORD2	BitSet
bitClear	KEYWORD2	BitClear
bit	KEYWORD2	Bit
highByte	KEYWORD2	HighByte
lowByte	KEYWORD2	LowByte

analogReference	KEYWORD2	AnalogReference
analogRead	KEYWORD2	AnalogRead
analogWrite	KEYWORD2	AnalogWrite
attachInterrupt	KEYWORD2	AttachInterrupt
detachInterrupt	KEYWORD2	DetachInterrupt
delay	KEYWORD2	Delay
delayMicroseconds	KEYWORD2	DelayMicroseconds
digitalWrite	KEYWORD2	DigitalWrite
digitalRead	KEYWORD2	DigitalRead
interrupts	KEYWORD2
millis	KEYWORD2	Millis
micros	KEYWORD2	Micros
noInterrupts	KEYWORD2	NoInterrupts
noTone	KEYWORD2	NoTone
pinMode	KEYWORD2	PinMode
pulseIn	KEYWORD2	PulseIn
shiftIn	KEYWORD2	ShiftIn
shiftOut	KEYWORD2	ShiftOut
tone	KEYWORD2	Tone
yield	KEYWORD2	Yield

Serial	KEYWORD1	Serial
Serial1	KEYWORD1	Serial
Serial2	KEYWORD1	Serial
Serial3	KEYWORD1	Serial
SerialUSB	KEYWORD1	Serial
begin	KEYWORD2	Serial_Begin
end	KEYWORD2	Serial_End
peek	KEYWORD2	Serial_Peek
read	KEYWORD2	Serial_Read
print	KEYWORD2	Serial_Print
println	KEYWORD2	Serial_Println
available	KEYWORD2	Serial_Available
availableForWrite	KEYWORD2
flush	KEYWORD2	Serial_Flush
setTimeout	KEYWORD2
find	KEYWORD2
findUntil	KEYWORD2
parseInt	KEYWORD2
parseFloat	KEYWORD2
readBytes	KEYWORD2
readBytesUntil	KEYWORD2
readString	KEYWORD2
readStringUntil	KEYWORD2
trim	KEYWORD2
toUpperCase	KEYWORD2
toLowerCase	KEYWORD2
charAt	KEYWORD2
compareTo	KEYWORD2
concat	KEYWORD2
endsWith	KEYWORD2
startsWith	KEYWORD2
equals	KEYWORD2
equalsIgnoreCase	KEYWORD2
getBytes	KEYWORD2
indexOf	KEYWORD2
lastIndexOf	KEYWORD2
length	KEYWORD2
replace	KEYWORD2
setCharAt	KEYWORD2
substring	KEYWORD2
toCharArray	KEYWORD2
toInt	KEYWORD2

Keyboard	KEYWORD1
Mouse	KEYWORD1
press	KEYWORD2
release	KEYWORD2
releaseAll	KEYWORD2
accept	KEYWORD2
click	KEYWORD2
move	KEYWORD2
isPressed	KEYWORD2

# KEYWORD3 specifies structures

break	KEYWORD3	Break
case	KEYWORD3	SwitchCase
char	KEYWORD3	Char
class	KEYWORD3
continue	KEYWORD3	Continue
default	KEYWORD3	SwitchCase	
do	KEYWORD3	DoWhile
double	KEYWORD3	Double
else	KEYWORD3	Else
for	KEYWORD3	For
if	KEYWORD3	If
register	KEYWORD3	
return	KEYWORD3	Return	
	
switch	KEYWORD3	SwitchCase
this	KEYWORD3	
throw	KEYWORD3	
try	KEYWORD3
while	KEYWORD3	While
word	KEYWORD3	Word

setup	KEYWORD3	Setup
loop	KEYWORD3	Loop

# operators aren't highlighted, but may have documentation

+=		IncrementCompound
+		Arithmetic
[]		arrayaccess
=		assign
&		BitwiseAnd
|		BitwiseAnd
,		
//		Comments
?:		
{}		Braces
--		Increment
/		Arithmetic
/*		Comments
.		dot
==		
<		greaterthan
<=		greaterthanorequalto
++		Increment
!=		inequality
<<		Bitshift
<		lessthan
<=		lessthanorequalto
&&		Boolean
!		Boolean
||		Boolean
-		Arithmetic
%		Modulo
*		Arithmetic
()		parentheses
>>		Bitshift
;		SemiColon
-=		IncrementCompound